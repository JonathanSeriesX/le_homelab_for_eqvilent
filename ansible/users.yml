# --- Play A: HBAC on the IPA server -----------------------------------------
- name: Configure HBAC on IPA server
  hosts: rocky
  become: true
  vars_files:
    - vars.yml
  vars:
    app_fqdn: "app.lab.evgenii.org"

  tasks:
    - name: kinit admin (non-interactive)
      no_log: true
      shell: echo "{{ ipa_admin_password }}" | kinit admin
      changed_when: false

    - name: Ensure HBAC rule exists
      shell: ipa hbacrule-add allow-ssh-to-app --desc="Allow SSH to app host" || true
      changed_when: false

    - name: Bind HBAC rule to app host + sshd service
      shell: |
        ipa hbacrule-mod allow-ssh-to-app --hostcat=none || true
        ipa hbacrule-add-host allow-ssh-to-app --hosts='{{ app_fqdn }}' || true
        ipa hbacrule-mod allow-ssh-to-app --servicecat=none || true
        ipa hbacrule-add-service allow-ssh-to-app --hbacsvcs=sshd || true
      changed_when: false

    - name: Add users to HBAC rule
      shell: |
        ipa hbacrule-add-user allow-ssh-to-app --users=user1 || true
        ipa hbacrule-add-user allow-ssh-to-app --users=user2 || true
        ipa hbacrule-add-user allow-ssh-to-app --users=user3 || true
      changed_when: false

# --- Play B: Filesystem permissions on the app host --------------------------
- name: Set permissions on Docker working directory
  hosts: app
  become: true
  vars:
    docker_workdir: "/app"
    acl_entries:
      - { user: "user1", perms: "rx" } # read-only
      - { user: "user2", perms: "wx" } # write-only??
      - { user: "user3", perms: "rwx" } # read+write

  tasks:
    - name: Ensure ACL tooling present
      package:
        name: acl
        state: present

    - name: Ensure Docker work dir exists
      file:
        path: "{{ docker_workdir }}"
        state: directory
        mode: "0775"

    # Apply both access and default ACLs (inheritance) in one go
    - name: Apply access and default ACLs
      ansible.posix.acl:
        path: "{{ docker_workdir }}"
        entity: "{{ item.0.user }}"
        etype: user
        permissions: "{{ item.0.perms }}"
        default: "{{ item.1 }}"
        state: present
      loop: "{{ query('nested', acl_entries, [false, true]) }}"
